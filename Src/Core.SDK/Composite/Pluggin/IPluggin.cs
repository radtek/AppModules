using System;
using System.Collections.Generic;
using System.Text;
using Core.SDK.Composite.Common;

namespace Core.SDK.Composite.Pluggin
{
    public interface IPluggin: IDisposable
    {
        /// <summary>
        /// Название плагина, которое может показываться в пользовательском интерфейсе
        /// </summary>
        string Name { get; }

        /// <summary>
        /// Название плагина для логирования
        /// </summary>
        string InternalName { get; }

        /// <summary>
        /// Идентификатор плагина (не должен изменяться - используется для 
        /// сохранения\восстановления последнего состояния программы и пр. )
        /// </summary>
        IdentKey Identidicator { get; }

        /// <summary>
        /// Начальная инициализация (уже доступны базовые сервисы, но хост-форма еще не создана). 
        /// Здесь можно регестрировать специфичные для плагина сервисов, которые могут быть 
        /// доступны другим плагинам
        /// </summary>
        void Init();

        /// <summary>
        /// Все базовые сервисы и хост-фома созданы и доступны для использования.
        /// Пользователь прошел авторизацию. Считаны настройки из БД (или реестра).
        /// Все панели и формы приведены к последнему сохраненному виду
        /// Здесь можно запросить настройки плагина, встроиться в интерфейс главной формы (конструировать меню и пр.) и 
        /// подписываться на необходимые события. Найти ранее созданные панели (или создать заново)
        /// </summary>
        void Preprocess();

        /// <summary>
        /// Все инициализации произведены.
        /// Начало основной работы - заполнение панелей данными, старт фоновых потоков и т.д.
        /// </summary>
        void Run();
    }
}
